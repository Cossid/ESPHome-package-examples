substitutions:
  device_name: !secret device-name-sensor-main-panel2
  friendly_name: Main Panel 2
  area: Utility Room
  wifi_static_ip: !secret ip-sensor-main-panel2

packages:
  base: !include common/base.yaml
  wifi: !include common/wifi/wifi-mid-upper-lower.yaml
  wifi_static_ip: !include common/wifi/wifi-static-ip.yaml
  device: !include common/devices/sensors/emporia-vue3.yaml

# these are called references in YAML. They allow you to reuse
# this configuration in each sensor, while only defining it once
.defaultfilters:
  - &moving_avg
    # we capture a new sample every 0.24 seconds, so the time can
    # be calculated from the number of samples as n * 0.24.
    sliding_window_moving_average:
      # we average over the past 2.88 seconds
      window_size: 24
      # we push a new value every 1.44 seconds
      send_every: 12
  - &invert
    # invert and filter out any values below 0.
    lambda: 'return max(-x, 0.0f);'
  - &pos
    # filter out any values below 0.
    lambda: 'return max(x, 0.0f);'
  - &abs
    # take the absolute value of the value
    lambda: 'return abs(x);'

sensor:
  - platform: emporia_vue
    i2c_id: i2c_a
    phases:
      - id: phase_a  # Verify that this specific phase/leg is connected to correct input wire color on device listed below
        input: BLACK  # Vue device wire color
        calibration: 0.0192  # 0.022 is used as the default as starting point but may need adjusted to ensure accuracy
        # To calculate new calibration value use the formula <in-use calibration value> * <accurate voltage> / <reporting voltage>
        # at 0.0194, 122.70
        voltage:
          name: "Phase A Voltage"
          filters: [*abs]
      - id: phase_b  # Verify that this specific phase/leg is connected to correct input wire color on device listed below
        input: RED  # Vue device wire color
        calibration: 0.0192  # 0.022 is used as the default as starting point but may need adjusted to ensure accuracy
        # To calculate new calibration value use the formula <in-use calibration value> * <accurate voltage> / <reporting voltage>
        # at 0.0194, 123.0
        voltage:
          name: "Phase B Voltage"
          filters: [*abs]
    ct_clamps:
      - phase_id: phase_a
        input: "C"  # Verify the CT going to this device input also matches the phase/leg
        power:
          name: "Circuit 2 & 4 Power"
          id: phase_a_power
          device_class: power
          filters: [*moving_avg, *abs, multiply: 2]
      - phase_id: phase_b
        input: "B"  # Verify the CT going to this device input also matches the phase/leg
        power:
          name: "Circuit 6 & 8 Power"
          id: phase_b_power
          device_class: power
          filters: [*moving_avg, *abs, multiply: 2]
      # Pay close attention to set the phase_id for each breaker by matching it to the phase/leg it connects to in the panel
      # Emporia clamps need *abs, 30A need multiply: 0.6
      - { phase_id: phase_a, input:  "1", power: { name: "Circuit 10 Power", id: cir1, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_b, input:  "2", power: { name: "Circuit 12 Power", id: cir2, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_a, input:  "3", power: { name: "Circuit 14 Power", id: cir3, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_b, input:  "4", power: { name: "Circuit 16 Power", id: cir4, filters: [ *moving_avg, multiply: 0.6 ] } }
      - { phase_id: phase_a, input:  "5", power: { name: "Circuit 18 Power", id: cir5, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_b, input:  "6", power: { name: "Circuit 20 Power", id: cir6, filters: [ *moving_avg, multiply: 0.6 ] } }
      - { phase_id: phase_a, input:  "7", power: { name: "Circuit 22 Power", id: cir7, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_b, input:  "8", power: { name: "Circuit 24 Power", id: cir8, filters: [ *moving_avg, multiply: 0.6 ] } }
      - { phase_id: phase_a, input:  "9", power: { name: "Circuit 26 Power", id: cir9, filters: [ *moving_avg, multiply: 0.6 ] } }
      - { phase_id: phase_b, input: "10", power: { name: "Circuit 28 Power", id: cir10, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_a, input: "11", power: { name: "Circuit 30 & 32 Power", id: cir11, filters: [ *moving_avg, *abs, multiply: 2 ] } }
      - { phase_id: phase_a, input: "12", power: { name: "Circuit 34 Power", id: cir12, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_b, input: "13", power: { name: "Circuit 36 Power", id: cir13, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_a, input: "14", power: { name: "Circuit 38 Power", id: cir14, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_b, input: "15", power: { name: "Circuit 40 Power", id: cir15, filters: [ *moving_avg, *abs ] } }
      - { phase_id: phase_b, input: "16", power: { name: "Circuit 39 Power", id: cir16, filters: [ *moving_avg, *abs ] } }
  - { power_id:  phase_a_power, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 2 & 4 Daily Energy" }
  - { power_id:  phase_b_power, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 6 & 8 Daily Energy" }
  - { power_id:  cir1, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 10 Daily Energy" }
  - { power_id:  cir2, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 12 Daily Energy" }
  - { power_id:  cir3, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 14 Daily Energy" }
  - { power_id:  cir4, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 16 Daily Energy" }
  - { power_id:  cir5, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 18 Daily Energy" }
  - { power_id:  cir6, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 20 Daily Energy" }
  - { power_id:  cir7, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 22 Daily Energy" }
  - { power_id:  cir8, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 24 Daily Energy" }
  - { power_id:  cir9, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 26 Daily Energy" }
  - { power_id: cir10, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 28 Daily Energy" }
  - { power_id: cir11, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 30 & 32 Daily Energy" }
  - { power_id: cir12, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 34 Daily Energy" }
  - { power_id: cir13, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 36 Daily Energy" }
  - { power_id: cir14, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 38 Daily Energy" }
  - { power_id: cir15, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 40 Daily Energy" }
  - { power_id: cir16, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 39 Daily Energy" }
  - platform: template
    name: "Total Power (Circuits)"
    lambda: return id(phase_a_power).state + id(phase_b_power).state + id(cir1).state + id(cir2).state + id(cir3).state + id(cir4).state + id(cir5).state + id(cir6).state + id(cir7).state + id(cir8).state + id(cir9).state + id(cir10).state + id(cir11).state + id(cir12).state + id(cir13).state + id(cir14).state + id(cir15).state + id(cir16).state;
    update_interval: 10s
    id: total_power_circuits
    unit_of_measurement: "W"